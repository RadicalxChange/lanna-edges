generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                                         Int           @id @default(autoincrement())
  name                                       String        @db.VarChar(255)
  email                                      String        @unique
  balance                                    Int
  velocity                                   Int           @default(0)
  is_member                                  Boolean       @default(false)
  is_admin                                   Boolean       @default(false)
  is_bank                                    Boolean       @default(false)
  pending_approval                           Boolean       @default(false)
  transactions_received                      Transaction[] @relation("transaction_recipient")
  transactions_sent                          Transaction[] @relation("transaction_sender")
  listings_posted                            Listing[]     @relation("listing_author")
  created_at                                 DateTime      @default(now())
  updated_at                                 DateTime      @default(now()) @updatedAt
}

model Transaction {
  id                                     Int     @id @default(autoincrement())
  amount                                 Int
  message                                String  @db.VarChar
  is_taxable                             Boolean @default(false)
  sender_id                              Int
  sender                                 Account @relation("transaction_sender", fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  recipient_id                           Int
  recipient                              Account @relation("transaction_recipient", fields: [recipient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  created_at                             DateTime  @default(now())
  updated_at                             DateTime  @default(now()) @updatedAt
}

model Listing {
  id                                     Int     @id @default(autoincrement())
  author_id                              Int
  author                                 Account @relation("listing_author", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  type                                   ListingType
  message                                String  @db.VarChar
  reward                                 Int
  contact                                String  @db.VarChar
  status                                 ListingStatus
  created_at                             DateTime  @default(now())
  updated_at                             DateTime  @default(now()) @updatedAt
}

enum ListingType {
  offer
  request
}

enum ListingStatus {
  active
  complete
  delisted
}
